name: Python App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11.7

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    # Load cached venv
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    # Install dependencies if not cached
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Test
      run: |
        poetry run pytest

    - name: Lint
      run: |
        poetry run black --check .
        poetry run pylint --fail-under=10.0 .

    - name: Type check
      run: |
        poetry run mypy .

    - name: Import check
      run: |
        poetry run isort --check .